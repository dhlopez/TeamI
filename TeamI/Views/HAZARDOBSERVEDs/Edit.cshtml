@model TeamI.Models.HAZARDOBSERVED

@{
    ViewBag.Title = "Solve Problem";
}

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()


                @Html.LabelFor(model => model.problemFound, htmlAttributes: new { @class = "control-label" })

                @Html.EditorFor(model => model.problemFound, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                @Html.ValidationMessageFor(model => model.problemFound, "", new { @class = "text-danger" })




       
                @Html.LabelFor(model => model.actionRequired, htmlAttributes: new { @class = "control-label" })

                @Html.EditorFor(model => model.actionRequired, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                @Html.ValidationMessageFor(model => model.actionRequired, "", new { @class = "text-danger" })
    

     
                @Html.LabelFor(model => model.InspectionDetailID, "InspectionDetailID", htmlAttributes: new { @class = "control-label" })

                @Html.DropDownList("InspectionDetailID", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.InspectionDetailID, "", new { @class = "text-danger" })



       

            @Html.LabelFor(model => model.HazardID, "HazardID", htmlAttributes: new { @class = "control-label " })

            @Html.DropDownList("HazardID", null, htmlAttributes: new { @class = "form-control"})
            @Html.ValidationMessageFor(model => model.HazardID, "", new { @class = "text-danger" })


    























    
   
   



        <div class="form-group">
            @Html.LabelFor(model => model.Status, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.Status)
                    @Html.ValidationMessageFor(model => model.Status, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.solvedAction, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.solvedAction, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.solvedAction, "", new { @class = "text-danger" })
            </div>
        </div>

        @Html.HiddenFor(model => model.ID)

      
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
   
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
