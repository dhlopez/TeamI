@model TeamI.ViewModel.SearchVM

@{
    ViewBag.Title = "Index";
}

<h2>Search</h2>
@using (Html.BeginForm("Index", "Search", FormMethod.Get))
{
    <b> Search Option: </b>
    <text>Start Date:</text>
    @Html.TextBox("startDate", null, new { @id = "datefield", type = "date" })
    <text>End Date:</text>
    @Html.TextBox("endDate", DateTime.Now.ToString("d:0"), new { @id = "datefield", type = "date" })
    <text>Lab:</text>
    @Html.TextBox("labSearch")
    <text>Technician:</text>
    @Html.TextBox("techSearch")
    <br />
    <text>Status:</text>
    @Html.RadioButton("status", "Pass")
    <text>Pass</text>
    @Html.RadioButton("status", "Fail")
    <text>Fail</text>
    <input type = "submit" name = "submit" value = "Search" />
    }

@if (Model.inspection.Count() > 0)
{
@*Inspections*@
<h3>Inspections</h3>
<div>
    <table class="table">
        <tr>
            <th>
                Date
            </th>
            <th>
                Technician's Name
            </th>
            <th>
                Lab Building
            </th>
            <th>
                Status
            </th>
        </tr>
        @foreach (var item in Model.inspection)
        {
            int subHeader = 0;
            <tr style="background-color:#dddddd">
                <td>
                    @Html.DisplayFor(modelItem => item.date)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.USER.FullName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.LAB.building)
                </td>

                <td>
                    @{if (item.status == false)
                        {
                            <text>Fail</text> <span class="glyphicon glyphicon-remove" aria-hidden="true"></span>
                        }
                        else
                        {
                            <text>Pass</text> <span class="glyphicon glyphicon-ok" aria-hidden="true"></span>
                        }
                    }
                </td>
            </tr>
                        foreach (var subItem in Model.inspectionDetails.Where(x => x.InspectionID == item.ID))
                        {
                            while (subHeader < 1)
                            {
                                subHeader++;
                    <tr style="background-color:#f2f2f2">
                        <th></th>
                        <th>
                        </th>
                        <th>
                            Area/Equipmennt
                        </th>
                        <th></th>
                    </tr>
                            }
                <tr style="background-color:white"> 
                    <td></td>
                    <td></td>
                    <td>
                        @Html.DisplayFor(modelItem => subItem.AreaEquipment)
                    </td>
                    <td></td>
                </tr>
                            }
                        }
    </table>
</div>
                        }
@*Inspection Details*@
@if (Model.inspectionDetails.Where(y => y.InspectionID == null).Count() > 0)
{
    <h3>Corrective Actions</h3>
    <div>
        <table class="table">
            <tr >
                <th>
                    Date
                </th>
                <th>
                    Technician's Name
                </th>
                <th>
                    Area Equipment
                </th>
            </tr>

            @foreach (var item in Model.inspectionDetails.Where(y => y.InspectionID == null))
            {
                int subHeader = 0;
                <tr style="background-color:#dddddd">
                    <td>
                        @Html.DisplayFor(modelItem => item.Date)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.USER.FullName)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.AreaEquipment)
                    </td>
                </tr>
                foreach (var subItem in Model.hazardsObserved.Where(x => x.InspectionDetailID == item.ID))
                {
                    while (subHeader < 1)
                    {
                        subHeader++;
                        <tr style="background-color:#f2f2f2">
                            <th></th>
                            <th>
                                Hazard
                            </th>
                            <th>
                                Description
                            </th>
                        </tr>
                    }

                    <tr style="background-color:white" >
                        <td></td>
                        <td>
                            @Html.DisplayFor(modelItem => subItem.HAZARD.Description)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => subItem.Comments)
                        </td>
                    </tr>
                }
            }

        </table>
    </div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script type="text/javascript" src="@Url.Content("https://code.jquery.com/ui/1.12.1/jquery-ui.js")"></script>
    <link rel="stylesheet" href="//code.jquery.com/ui/1.12.1/themes/base/jquery-ui.css">
    <script>
      $( function() {
        $( "#datepick" ).datepicker();
      } );
    </script>
}

