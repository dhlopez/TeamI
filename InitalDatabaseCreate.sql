
-- Create tables
IF (NOT EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'USER'))
BEGIN
  CREATE TABLE [USER]
  (
    ID INT NOT NULL,
    firstName VARCHAR(100),
    lastName VARCHAR(100),
    email VARCHAR(200),
    phone VARCHAR(10),
    taskID INT,
    postalCode VARCHAR(6),
    [role] INT,
    PRIMARY KEY(ID)
  )
END;

IF (NOT EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'LAB'))
BEGIN
  CREATE TABLE LAB
  (
    ID INT NOT NULL,
    building VARCHAR(100),
    room INT,
    [type] VARCHAR(100),
    PRIMARY KEY(ID)
  )
END;

IF (NOT EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'EQUIPMENT'))
BEGIN
  CREATE TABLE EQUIPMENT
  (
    id INT NOT NULL,
    labID INT,
    name VARCHAR(100),
    [type] VARCHAR(100),
    PRIMARY KEY(id)
  )
END;

IF (NOT EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'HAZARD'))
BEGIN
  CREATE TABLE HAZARD
  (
    ID INT NOT NULL,
    equipmentID INT,
    name VARCHAR(100),
    PRIMARY KEY(ID)
  )
END;

IF (NOT EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'INSPECTION'))
BEGIN
  CREATE TABLE INSPECTION
  (
    ID INT NOT NULL,
    [date] DATE,
    labID INT,
    userID INT,
    correctionID INT,
    [status] BIT,
    PRIMARY KEY(ID)
  )
END;

IF (NOT EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'CORRECTION'))
BEGIN
  CREATE TABLE CORRECTION
  (
    ID INT,
    equipmentID INT NOT NULL,
    hazardID INT,
    [action] VARCHAR(1000),
    PRIMARY KEY(equipmentID)
  )
END;

IF (NOT EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'TASK'))
BEGIN
  CREATE TABLE [TASK]
  (
    ID INT NOT NULL,
    [description] VARCHAR(1000),
    [date] DATE,
    [status] BIT,
    PRIMARY KEY(ID)
  )
END;


-- Create FKs
ALTER TABLE EQUIPMENT
    ADD    FOREIGN KEY (labID)
    REFERENCES LAB(ID)
;
    
ALTER TABLE CORRECTION
    ADD    FOREIGN KEY (hazardID)
    REFERENCES HAZARD(ID)
;
    
ALTER TABLE CORRECTION
    ADD    FOREIGN KEY (equipmentID)
    REFERENCES EQUIPMENT(id)
;
    
ALTER TABLE INSPECTION
    ADD    FOREIGN KEY (userID)
    REFERENCES [USER](ID)
;
    
ALTER TABLE INSPECTION
    ADD    FOREIGN KEY (labID)
    REFERENCES LAB(ID)
;
    
ALTER TABLE [USER]
    ADD    FOREIGN KEY (taskID)
    REFERENCES [TASK](ID)
;
    
ALTER TABLE INSPECTION
    ADD    FOREIGN KEY (correctionID)
    REFERENCES CORRECTION(ID)
;